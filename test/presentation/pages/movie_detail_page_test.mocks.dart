// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/presentation/pages/movie_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:bloc/bloc.dart' as _i15;
import 'package:ditonton/domain/usecases/get_movie_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_movie_recommendations.dart' as _i3;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i4;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i6;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i5;
import 'package:ditonton/presentation/bloc/detail_movies/detail_movies_bloc.dart'
    as _i7;
import 'package:ditonton/tv_show/domain/useCases/get_tv_detail.dart' as _i8;
import 'package:ditonton/tv_show/domain/useCases/get_tv_recommendation.dart'
    as _i12;
import 'package:ditonton/tv_show/domain/useCases/get_watch_list_status.dart'
    as _i11;
import 'package:ditonton/tv_show/domain/useCases/remove_watch_list.dart'
    as _i10;
import 'package:ditonton/tv_show/domain/useCases/save_watch_list.dart' as _i9;
import 'package:ditonton/tv_show/presentation/bloc/tv_detail/tv_detail_bloc.dart'
    as _i13;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetMovieDetail_0 extends _i1.SmartFake
    implements _i2.GetMovieDetail {
  _FakeGetMovieDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMovieRecommendations_1 extends _i1.SmartFake
    implements _i3.GetMovieRecommendations {
  _FakeGetMovieRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatus_2 extends _i1.SmartFake
    implements _i4.GetWatchListStatus {
  _FakeGetWatchListStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlist_3 extends _i1.SmartFake implements _i5.SaveWatchlist {
  _FakeSaveWatchlist_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlist_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlist {
  _FakeRemoveWatchlist_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailMoviesState_5 extends _i1.SmartFake
    implements _i7.DetailMoviesState {
  _FakeDetailMoviesState_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvDetail_6 extends _i1.SmartFake implements _i8.GetTvDetail {
  _FakeGetTvDetail_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchListTv_7 extends _i1.SmartFake
    implements _i9.SaveWatchListTv {
  _FakeSaveWatchListTv_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchListTv_8 extends _i1.SmartFake
    implements _i10.RemoveWatchListTv {
  _FakeRemoveWatchListTv_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatusTv_9 extends _i1.SmartFake
    implements _i11.GetWatchListStatusTv {
  _FakeGetWatchListStatusTv_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvRecommendation_10 extends _i1.SmartFake
    implements _i12.GetTvRecommendation {
  _FakeGetTvRecommendation_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailState_11 extends _i1.SmartFake
    implements _i13.TvDetailState {
  _FakeTvDetailState_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DetailMoviesBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailMoviesBloc extends _i1.Mock implements _i7.DetailMoviesBloc {
  MockDetailMoviesBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetMovieDetail get getMovieDetail => (super.noSuchMethod(
        Invocation.getter(#getMovieDetail),
        returnValue: _FakeGetMovieDetail_0(
          this,
          Invocation.getter(#getMovieDetail),
        ),
      ) as _i2.GetMovieDetail);

  @override
  _i3.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getMovieRecommendations),
        returnValue: _FakeGetMovieRecommendations_1(
          this,
          Invocation.getter(#getMovieRecommendations),
        ),
      ) as _i3.GetMovieRecommendations);

  @override
  _i4.GetWatchListStatus get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListStatus_2(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i4.GetWatchListStatus);

  @override
  _i5.SaveWatchlist get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlist_3(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i5.SaveWatchlist);

  @override
  _i6.RemoveWatchlist get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlist_4(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i6.RemoveWatchlist);

  @override
  _i7.DetailMoviesState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDetailMoviesState_5(
          this,
          Invocation.getter(#state),
        ),
      ) as _i7.DetailMoviesState);

  @override
  _i14.Stream<_i7.DetailMoviesState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i14.Stream<_i7.DetailMoviesState>.empty(),
      ) as _i14.Stream<_i7.DetailMoviesState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i7.DetailMoviesEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i7.DetailMoviesEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i7.DetailMoviesState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i7.DetailMoviesEvent>(
    _i15.EventHandler<E, _i7.DetailMoviesState>? handler, {
    _i15.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i15.Transition<_i7.DetailMoviesEvent, _i7.DetailMoviesState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  void onChange(_i15.Change<_i7.DetailMoviesState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvDetailBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailBloc extends _i1.Mock implements _i13.TvDetailBloc {
  MockTvDetailBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetTvDetail get getTvShowDetail => (super.noSuchMethod(
        Invocation.getter(#getTvShowDetail),
        returnValue: _FakeGetTvDetail_6(
          this,
          Invocation.getter(#getTvShowDetail),
        ),
      ) as _i8.GetTvDetail);

  @override
  _i9.SaveWatchListTv get addToWatchlist => (super.noSuchMethod(
        Invocation.getter(#addToWatchlist),
        returnValue: _FakeSaveWatchListTv_7(
          this,
          Invocation.getter(#addToWatchlist),
        ),
      ) as _i9.SaveWatchListTv);

  @override
  _i10.RemoveWatchListTv get removeFromWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeFromWatchlist),
        returnValue: _FakeRemoveWatchListTv_8(
          this,
          Invocation.getter(#removeFromWatchlist),
        ),
      ) as _i10.RemoveWatchListTv);

  @override
  _i11.GetWatchListStatusTv get getWatchlistStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchlistStatus),
        returnValue: _FakeGetWatchListStatusTv_9(
          this,
          Invocation.getter(#getWatchlistStatus),
        ),
      ) as _i11.GetWatchListStatusTv);

  @override
  _i12.GetTvRecommendation get getTvShowRecommendations => (super.noSuchMethod(
        Invocation.getter(#getTvShowRecommendations),
        returnValue: _FakeGetTvRecommendation_10(
          this,
          Invocation.getter(#getTvShowRecommendations),
        ),
      ) as _i12.GetTvRecommendation);

  @override
  _i13.TvDetailState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTvDetailState_11(
          this,
          Invocation.getter(#state),
        ),
      ) as _i13.TvDetailState);

  @override
  _i14.Stream<_i13.TvDetailState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i14.Stream<_i13.TvDetailState>.empty(),
      ) as _i14.Stream<_i13.TvDetailState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i13.TvDetailEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i13.TvDetailEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i13.TvDetailState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i13.TvDetailEvent>(
    _i15.EventHandler<E, _i13.TvDetailState>? handler, {
    _i15.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i15.Transition<_i13.TvDetailEvent, _i13.TvDetailState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  void onChange(_i15.Change<_i13.TvDetailState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
