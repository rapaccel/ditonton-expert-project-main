// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/tv_show/presentation/provider/tv_detail_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/tv_show/domain/entities/tv_show.dart' as _i9;
import 'package:ditonton/tv_show/domain/entities/tv_show_detail.dart' as _i7;
import 'package:ditonton/tv_show/domain/repositories/tv_repositories.dart'
    as _i2;
import 'package:ditonton/tv_show/domain/useCases/get_tv_detail.dart' as _i4;
import 'package:ditonton/tv_show/domain/useCases/get_tv_recommendation.dart'
    as _i8;
import 'package:ditonton/tv_show/domain/useCases/get_watch_list_status.dart'
    as _i10;
import 'package:ditonton/tv_show/domain/useCases/remove_watch_list.dart'
    as _i12;
import 'package:ditonton/tv_show/domain/useCases/save_watch_list.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvRepositories_0 extends _i1.SmartFake
    implements _i2.TvRepositories {
  _FakeTvRepositories_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i4.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvShowDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.TvShowDetail>>.value(
                _FakeEither_1<_i6.Failure, _i7.TvShowDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.TvShowDetail>>);
}

/// A class which mocks [GetTvRecommendation].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendation extends _i1.Mock
    implements _i8.GetTvRecommendation {
  MockGetTvRecommendation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get tvRepositories => (super.noSuchMethod(
        Invocation.getter(#tvRepositories),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#tvRepositories),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvShow>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvShow>>>.value(
                _FakeEither_1<_i6.Failure, List<_i9.TvShow>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvShow>>>);
}

/// A class which mocks [GetWatchListStatusTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTv extends _i1.Mock
    implements _i10.GetWatchListStatusTv {
  MockGetWatchListStatusTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchListTv extends _i1.Mock implements _i11.SaveWatchListTv {
  MockSaveWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvShowDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchListTv extends _i1.Mock implements _i12.RemoveWatchListTv {
  MockRemoveWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepositories get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepositories_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvRepositories);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvShowDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [movie],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [movie],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
